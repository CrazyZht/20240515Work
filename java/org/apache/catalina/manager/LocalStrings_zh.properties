# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

htmlManagerServlet.appsAvailable=运行中
htmlManagerServlet.appsExpire=过期会话
htmlManagerServlet.appsName=显示名称
htmlManagerServlet.appsPath=路径
htmlManagerServlet.appsReload=重新加载
htmlManagerServlet.appsSessions=会话
htmlManagerServlet.appsStart=开始
htmlManagerServlet.appsStop=停止
htmlManagerServlet.appsTasks=命令
htmlManagerServlet.appsTitle=应用程序
htmlManagerServlet.appsUndeploy=卸载
htmlManagerServlet.appsVersion=版本
htmlManagerServlet.configReloadButton=重新读取
htmlManagerServlet.configSslHostName=TLS主机名称 (可选）
htmlManagerServlet.configSslReloadTitle=重新读取TLS配置文件
htmlManagerServlet.configTitle=配置
htmlManagerServlet.connectorStateAliveSocketCount=存活连接数量:
htmlManagerServlet.connectorStateBytesRecieved=收到字节数:
htmlManagerServlet.connectorStateBytesSent=发送字节数:
htmlManagerServlet.connectorStateErrorCount=错误数量:
htmlManagerServlet.connectorStateHint=P: 解析和准备请求 S: 服务 F: 结束 R: 就绪 K: 存活
htmlManagerServlet.connectorStateMaxProcessingTime=最大处理时间:
htmlManagerServlet.connectorStateMaxThreads=最大线程数:
htmlManagerServlet.connectorStateProcessingTime=处理时间:
htmlManagerServlet.connectorStateRequestCount=请求数量:
htmlManagerServlet.connectorStateTableTitleBRecv=B 接收
htmlManagerServlet.connectorStateTableTitleBSent=B 发送
htmlManagerServlet.connectorStateTableTitleClientAct=客户端 (实际)
htmlManagerServlet.connectorStateTableTitleClientForw=客户端 (转投)
htmlManagerServlet.connectorStateTableTitleRequest=请求
htmlManagerServlet.connectorStateTableTitleStage=阶段
htmlManagerServlet.connectorStateTableTitleTime=时间
htmlManagerServlet.connectorStateTableTitleVHost=虚拟主机
htmlManagerServlet.connectorStateThreadBusy=当前线程繁忙:
htmlManagerServlet.connectorStateThreadCount=当前线程数量:
htmlManagerServlet.deployButton=部署
htmlManagerServlet.deployConfig=XML配置文件URL:
htmlManagerServlet.deployPath=上下文路径(必须):
htmlManagerServlet.deployServer=在服务器上部署文件夹或WAR文件
htmlManagerServlet.deployTitle=部署
htmlManagerServlet.deployUpload=部署的WAR文件
htmlManagerServlet.deployUploadFail=失败 - 部署上传失败, 异常: [{0}]
htmlManagerServlet.deployUploadFile=选择要上传的WAR文件
htmlManagerServlet.deployUploadInServerXml=失败 - 如果在server.xml中定义context，War文件[{0}]无法上传
htmlManagerServlet.deployUploadNoFile=失败 - 文件上传失败，无文件
htmlManagerServlet.deployUploadNotWar=失败 - 上传文件[{0}]必须是一个.war文件
htmlManagerServlet.deployUploadWarExists=失败 - 服务器已经存在War文件[{0}]
htmlManagerServlet.deployWar=WAR或目录地址:
htmlManagerServlet.diagnosticsLeak=检查在启动、重新加载或者卸载应用程序时是否导致了内存泄漏
htmlManagerServlet.diagnosticsLeakButton=发现泄漏
htmlManagerServlet.diagnosticsLeakWarning=诊断会触发完全垃圾回收。谨慎在生产环境使用。
htmlManagerServlet.diagnosticsSsl=TLS连接器配置诊断
htmlManagerServlet.diagnosticsSslConnectorCertsButton=证书
htmlManagerServlet.diagnosticsSslConnectorCertsText=列出已配置TLS的虚拟主机和每个主机的认证链。
htmlManagerServlet.diagnosticsSslConnectorCipherButton=密码
htmlManagerServlet.diagnosticsSslConnectorCipherText=列出已配置TLS的虚拟主机和每个主机的密码。
htmlManagerServlet.diagnosticsSslConnectorTrustedCertsButton=认证证书
htmlManagerServlet.diagnosticsSslConnectorTrustedCertsText=列出已配置TLS的虚拟主机和每个主机的认证证书。
htmlManagerServlet.diagnosticsTitle=诊断
htmlManagerServlet.expire.explain=闲置 &ge;
htmlManagerServlet.expire.unit=分钟
htmlManagerServlet.findleaksList=以下web应用程序已经停止（重新加载，卸载），但是它们的\n\
类文件还加载在内存中，因此导致了内存泄漏 (使用分析工具确认):\n
htmlManagerServlet.findleaksNone=No web applications appear to have triggered a memory leak on stop, reload or undeploy.
htmlManagerServlet.helpHtmlManager=网页管理器帮助
htmlManagerServlet.helpHtmlManagerFile=../docs/html-manager-howto.html
htmlManagerServlet.helpManager=管理器帮助
htmlManagerServlet.helpManagerFile=../docs/manager-howto.html
htmlManagerServlet.jvmFreeMemory=空闲内存：
htmlManagerServlet.jvmMaxMemory=最大内存：
htmlManagerServlet.jvmTableTitleInitial=初始化
htmlManagerServlet.jvmTableTitleMaximum=最大
htmlManagerServlet.jvmTableTitleMemoryPool=内存池
htmlManagerServlet.jvmTableTitleTotal=总共
htmlManagerServlet.jvmTableTitleType=类型
htmlManagerServlet.jvmTableTitleUsed=已使用
htmlManagerServlet.jvmTotalMemory=总内存:
htmlManagerServlet.list=应用程序列表
htmlManagerServlet.manager=管理器
htmlManagerServlet.messageLabel=消息:
htmlManagerServlet.noManager=-
htmlManagerServlet.noVersion=未指定
htmlManagerServlet.osAvailableMemory=可用内存：
htmlManagerServlet.osFreePageFile=可用页文件：
htmlManagerServlet.osKernelTime=内核处理时间：
htmlManagerServlet.osMemoryLoad=内存负载：
htmlManagerServlet.osPhysicalMemory=物理内存：
htmlManagerServlet.osTotalPageFile=总页文件：
htmlManagerServlet.osUserTime=用户处理时间：
htmlManagerServlet.serverHostname=主机名称
htmlManagerServlet.serverIPAddress=IP地址
htmlManagerServlet.serverJVMVendor=JVM供应商
htmlManagerServlet.serverJVMVersion=JVM版本
htmlManagerServlet.serverOSArch=操作系统架构
htmlManagerServlet.serverOSName=操作系统名称
htmlManagerServlet.serverOSVersion=操作系统版本
htmlManagerServlet.serverTitle=服务器信息
htmlManagerServlet.serverVersion=Tomcat版本
htmlManagerServlet.title=Tomcat应用程序管理器

managerServlet.alreadyContext=失败 - 应用程序已存在，目录[{0}]
managerServlet.certsNotAvailable=在运行期连接器无法获取认证信息
managerServlet.deleteFail=失败 - 无法删除[{0}]。这个文件持续存在可能导致问题。
managerServlet.deployFailed=失败 - 在上下文路径[{0}]部署应用程序失败
managerServlet.deployed=OK - 在上下文路径[{0}]部署应用程序
managerServlet.deployedButNotStarted=失败 - 在上下文路径[{0}]部署的应用程序启动失败
managerServlet.exception=失败 - 出现异常[{0}]
managerServlet.findleaksFail=失败 - 查找泄漏失败：主机不是StandardHost实例
managerServlet.findleaksList=OK - 在以下应用程序中发现潜在的内存泄漏：
managerServlet.findleaksNone=OK - 未发现内存泄漏
managerServlet.inService=失败 - 当前应用程序[{0}]已经被提供服务
managerServlet.invalidCommand=失败 - 提供给命令[{0}]的参数无效
managerServlet.invalidPath=失败 - 指定上下文路径[{0}]无效
managerServlet.listed=OK - 列出虚拟主机[{0}]的应用程序
managerServlet.listitem={0}:{1}:{2}:{3}
managerServlet.mkdirFail=失败 - 无法创建目录[{0}]
managerServlet.noCommand=失败 - 未指定命令
managerServlet.noContext=失败 - 不存在名称为[{0}]的上下文
managerServlet.noGlobal=失败 - 无全局JNDI资源可用
managerServlet.noManager=失败 - 目录[{0}]不存在管理器
managerServlet.noSelf=失败 - 管理器无法重新加载、卸载、停止或者卸载它自身
managerServlet.noWrapper=容器还未为当前servlet调用setWrapper()方法
managerServlet.notDeployed=失败 - 上下文[{0}]是server.xml定义的，而且可能未卸载
managerServlet.notSslConnector=连接器未启用SSL
managerServlet.objectNameFail=失败 - 管理器Servlet无法注册对象[{0}]
managerServlet.postCommand=失败 - 尝试通过GET请求方式使用命令[{0}]，但是POST请求是必须的。
managerServlet.reloaded=OK - 上下文路径[{0}]下重新加载应用程序
managerServlet.resourcesAll=OK - 列出所有类型的全局资源
managerServlet.resourcesType=OK - 列出类型为[{0}]的全局资源
managerServlet.saveFail=失败 - 配置保存失败： [{0}]
managerServlet.saved=OK - 保存服务器配置
managerServlet.savedContext=OK - 保存上下文[{0}]配置
managerServlet.sessiondefaultmax=默认最大会话失活间隔时间是[{0}]分钟
managerServlet.sessions=OK - 上下文路径[{0}]下的应用程序的会话信息
managerServlet.sessiontimeout=失活[{0}]分钟： [{1}]会话
managerServlet.sessiontimeout.expired=失活[{0}]分钟： [{1}]会话过期
managerServlet.sessiontimeout.unlimited=无限时间：[{0}]会话
managerServlet.sslConnectorCerts=OK - 连接器/认证链信息
managerServlet.sslConnectorCiphers=OK - 连接器/SSL密码信息
managerServlet.sslConnectorTrustedCerts=OK - 连接器/信任的证书信息
managerServlet.sslReload=OK - 为[{0}]重新加载TLS配置信息
managerServlet.sslReloadAll=OK - 为所有TLS虚拟主机重新加载TLS配置信息
managerServlet.sslReloadFail=失败 - 重新加载TLS配置信息失败
managerServlet.startFailed=失败 - 无法启动上下文路径[{0}]下的应用程序
managerServlet.started=OK - 启动上下文路径[{0}]下的应用程序
managerServlet.stopped=OK - 停止启动上下文路径[{0}]下的应用程序
managerServlet.storeConfig.invalidMBean=失败 - 未找到StoreConfig Mbean。[{0}]不是有效的MBean名称。
managerServlet.storeConfig.noMBean=失败 - 在[{0}]没有注册的StoreConfig MBean。注册通常是由类StoreConfigLifecycleListener执行的.
managerServlet.threaddump=OK - JVM线程转储
managerServlet.trustedCertsNotConfigured=当前主机未配置信任的证书
managerServlet.undeployed=OK - 卸载应用程序，上下文路径 [{0}]
managerServlet.unknownCommand=失败 - 未知命令 [{0}]
managerServlet.vminfo=OK - VM信息

statusServlet.complete=完整的服务器状态
statusServlet.title=服务器状态
