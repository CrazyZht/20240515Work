# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

beanNameELResolver.beanReadOnly=Numele bean-ului [{0}] este numai citire

elProcessor.defineFunctionInvalidClass=Clasa [{0}] nu este publică
elProcessor.defineFunctionInvalidMethod=Metoda [{0}] pe clasa [{1}] nu este o metodă statică publică
elProcessor.defineFunctionInvalidParameterList=Lista de parametri [{0}] pentru metoda [{1}] pe clasa [{2}] nu este validă
elProcessor.defineFunctionInvalidParameterTypeName=Tipul de parametru [{0}] pentru metoda [{1}] pe clasa [{2}] nu este valid
elProcessor.defineFunctionNoMethod=Nu a putut fi găsită o metodă statică publică [{0}] pe clasa[{1}]
elProcessor.defineFunctionNullParams=Unul sau mai mulţi parametri de intrare a fost nul

expressionFactory.cannotCreate=Nu s-a putut crea ExpressionFactory de tipul [{0}]
expressionFactory.cannotFind=Nu s-a putut găsi ExpressionFactory de tipul [{0}]
expressionFactory.readFailed=Nu s-a putut citi [{0}]

importHandler.ambiguousImport=Clasa [{0}] nu a putut fi importată deoarece este în conflict cu [{1}] care a fost deja importată
importHandler.ambiguousStaticImport=Importul static [{0}] nu a putut fi procesat deoarece este în conflict cu [{1}] care a fost deja importat
importHandler.classNotFound=Clasa [{0}] nu a putut fi importată deoarece nu a putut fi găsită
importHandler.invalidClass=Clasa [{0}] trebuie să fie publică, într-un pachet exportat (pentru Java 9+), să nu fie abstractă şi să nu fie o interfaţă.
importHandler.invalidClassName=Numele de clasă pentru a importa [{0}] trebuie să includă un pachet
importHandler.invalidClassNameForStatic=Clasa [{0}] specificată pentru importul static [{1}] nu este validă
importHandler.invalidStaticName=Numele metodei statice sau câmpul pentru a importa [{0}] trebuie să includă o clasă
importHandler.staticNotFound=Importul static [{0}] nu a putut fi găsit în clasa [{1}] pentru importul [{2}]

lambdaExpression.tooFewArgs=Au fost furnizate numai [{0}] argumente pentru o expresie lambda care necesită cel puţin [{1}]

objectNotAssignable=Nu se poate adăuga un obiect de tipul [{0}] pe o matrice de obiecte de tipul [{1}]
propertyNotFound=Nu s-a găsit proprietatea [{1}] pe tipul [{0}]
propertyNotReadable=Nu se poate citi proprietatea [{1}] pe tipul [{0}]
propertyNotWritable=Nu se poate scrie proprietatea [{1}] pe tipul [{0}]
propertyReadError=Eroare la citirea [{1}] pe tipul [{0}]
propertyWriteError=Eroare la scrierea [{1}] pe tipul [{0}]

staticFieldELResolver.methodNotFound=Nu s-a găsit nicio metodă statică publică care se potriveşte numită [{0}] pe clasa [{1}]
staticFieldELResolver.notFound=Nu s-a găsit niciun câmp static public numit [{0}] pe clasa [{1}] (exportată pentru Java 9+)
staticFieldELResolver.notWritable=Nu este permisă scrierea pe câmpurile statice (în acest caz câmpul [{0}] pe clasa [{1}])

util.method.ambiguous=Nu se poate găsi metoda fără ambiguităţi: {0}.{1}({2})
util.method.notfound=Nu s-a găsit metoda: {0}.{1}({2})

